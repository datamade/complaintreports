\documentclass{article}
\usepackage{amsmath}
\usepackage{url}
\usepackage{enumitem}
\usepackage{lipsum}
\title{Report on Visualization and Analysis Opportunities in Recent
  Complaint Report Data}
\author{Forest Gregg, DataMade}


\begin{document}
\maketitle


<<include=FALSE>>=
library(knitr)
library(RPostgreSQL)
library(xtable)
library(lme4)
opts_chunk$set(
echo=F, fig.width=4.5, fig.height=4.75, fig.path='/home/fgregg/sweave-cache/figs/fig', cache=T, results='hide'
)
knit_hooks$set(inline = function(x) {
  prettyNum(x, big.mark=",")
})
@
With the current data, we can show some facts about police misconduct
and its investigation. If we take complaints as an imperfect
indicator of police misconduct, we can observe that:

\begin{enumerate}[noitemsep]
\item Officers who draw many complaints are unusual in the force and
  within their unit
\end{enumerate}

\noindent By looking at how complaints get processed, we can see that in the 
investigation process:

\begin{enumerate}[noitemsep]
\item Few complaints are sustained 
\item If police officers are the investigators, complainants are much
  less willing to sign affidavits than if investigated by IPRA staff.
\item The penalties for sustained complaints are meager
\end{enumerate}

I'll first discuss the patterns we can establish with current data,
and then what may be possible with additional data. Finally, I'll
discuss some potential problems in this data.

\section*{Currently Demonstrable Patterns}
\subsection*{Police Misconduct}
\subsubsection*{Multiple Complaints Are Rare}
<<allcomplaints, hide=TRUE>>=
con <- dbConnect(RPostgreSQL::PostgreSQL(), dbname="complaints")

verbal_abuse <- c('01B')
excessive_force <- c('05A', '05B', '05C', '05D', '05F',
                     '05G', '05H', '05J', '05K', '05L',
                     '05M', '05N', '05P', '05Q')
ipra_complaints <- c(verbal_abuse, excessive_force)

first_amendment <- c('03A', '03B', '03C', '03D', '03E', '03F', '03G')
search <- c('04A', '04B', '04C', '04D', '04E', '04F', '04G', '04H', '04J')

external_complaints_non_ipra <- c(first_amendment, search)

external_complaints <- c(external_complaints_non_ipra, ipra_complaints)

all_po <- dbGetQuery(con,
                     paste(
    "SELECT count(distinct complaint_id) AS count \
     FROM (SELECT * FROM accused WHERE complaint IN ('",
     paste(external_complaints, collapse="', '"),
     "')) AS external_complaints \                         
     INNER JOIN officers \
     USING (officer_id) \
     WHERE current_rank = 'PO' \
     GROUP BY officer_id \
     ORDER BY count(*)"))[,1]
@ 

Between September 2011 to May 2015, \Sexpr{length(all_po)} police
officers had at least one complaint that included an allegation of
verbal abuse with bias, excessive force, first amendment violations or
illegal searches.\footnote{We are assuming that no officers changed
  rank during this period. There are certainly some detectives,
  sergeants, and other higher officers in 2015 that were police
  officers at some point between between September 2011 and May
  2015. We are not counting these} During this period, the police
department had around \Sexpr{9300} police officers on payroll.

Of the officers with a complaint, \Sexpr{sum(all_po == 1)} police
officers had only one and 90\% of officers had four our fewer
complaints.  Only \Sexpr{sum(all_po >= 15)} officers had fifteen or
more complaints. That's about 1 in 1000. (Figure~\ref{po-complaint-fig})

\begin{figure}
<<>>=
barplot(table(all_po), 
        main='Complaints against Police Officers',
        xlab='Number of complaints',
        ylab='Police Officers')
@ 
\caption{Complaints against Police Officers from 2011 to 2015}
\label{po-complaint-fig}
\end{figure}


Multiple complaints are not just rare overall, they are rare in every
police unit. While average number of complaints does vary
substantially, in every unit there are always a few officers who gather many
more complaints than the rest of their units. We can see this pattern
by looking at the six units with the highest average number of
complaints per officer in Figure~\ref{complaints-unit-fig}.

\begin{figure}
<<byunits>>=
units <- dbGetQuery(con, 
    paste(
    "SELECT current_unit, AVG(count), COUNT(*) as avg_count FROM
     (SELECT current_unit, count(distinct complaint_id) AS count \
      FROM accused INNER JOIN officers \
      USING (officer_id) \
      WHERE complaint IN ('",
      paste(external_complaints, collapse="', '"),
      "') \
        AND current_rank = 'PO' \
      GROUP BY officer_id, current_unit) AS officer_count \
     GROUP BY current_unit \
     HAVING COUNT(*) > 10
     ORDER BY AVG(count) DESC"))

officer_units <- dbGetQuery(con, 
    paste(
    "SELECT current_unit, count(distinct complaint_id) AS count \
     FROM accused INNER JOIN officers \
     USING (officer_id) \
     WHERE complaint IN ('",
     paste(external_complaints, collapse="', '"),
     "') \
     GROUP BY officer_id, current_unit"))

par(mfrow=c(3,2))

unit_names = c('212'='Bureau of Patrol - South',
               '189'='Narcotics Division',
               '192'='Vice and Asset Forfeiture',
               '311'='Gang Enforcement - Central',
               '393'='Gang Enforcement Division',
               '312'='Gang Enforcement - South',
               '213'='Burea of Patrol - North')

for (i in 1:6) {
    unit = units[i, 'current_unit']
    avg = units[i, 'avg']
    n = units[i, 'n']
    barplot(table(officer_units[officer_units$current_unit == unit, 'count']),
         main = paste(unit_names[as.character(unit)],
                      '\nAverage: ',
                      signif(avg,2),
                      sep=''),
         xlab="Number of complaints",
         ylab="Police Officers")
}    
par(mfrow=c(1,1))
@ 
\caption{Complaints by unit}
\label{complaints-unit-fig}
\end{figure}

Officers who receive multiple complaints are not just having an
unlucky year. If many complaints are made against an officer in one
year, then its likely that many complaints will be against that
officer in the next year (Figure~\ref{complaints-year-fig}).

\begin{figure}
<<complaintsbyyear>>=
yearly_complaints <- dbGetQuery(con,
                                paste(
    "SELECT year, officer_id, count(complaint_id) AS complaints, \
            max(current_unit) as unit, max(current_rank) as rank, \
            max(gender) as gender, max(race) as race
     FROM \
     (SELECT EXTRACT(YEAR FROM incident_date::TIMESTAMP) AS year, \
             officer_id, \
             complaint_id \
      FROM accused INNER JOIN complaints \
      USING (complaint_id) \
      WHERE complaint IN ('",
     paste(external_complaints, collapse="', '"),
     "') \                               
      ) AS complaints \
     RIGHT OUTER JOIN \
     (SELECT * \ 
      FROM officers CROSS JOIN \
      (SELECT UNNEST(ARRAY[2012,2013,2014]) AS year) AS years \
      WHERE current_rank='PO' \
      ) AS officer_years \
     USING (year, officer_id) \
     GROUP BY officer_id, year"))
yearly_complaints <- na.omit(yearly_complaints)
yearly_complaints_for_analysis <- yearly_complaints

yearly_complaints <- data.frame('2012'=yearly_complaints[yearly_complaints$year == '2012', 
                                  'complaints'], 
                                '2013'=yearly_complaints[yearly_complaints$year=='2013', 
                                           'complaints'],
                                '2014'=yearly_complaints[yearly_complaints$year=='2014', 
                                    'complaints'])

yearly_complaints <- yearly_complaints[rowSums(yearly_complaints) > 0,]

over_time <- data.frame(previous_year = c(yearly_complaints$X2012,
                                          yearly_complaints$X2013),
                        next_year = c(yearly_complaints$X2013,
                                      yearly_complaints$X2014))

x.bin <- 0:max(over_time$previous_year)
y.bin <- 0:max(over_time$next_year)

freq <-  as.data.frame(table(findInterval(over_time$previous_year, x.bin),
                             findInterval(over_time$next_year, y.bin)))

freq[,1] <- as.numeric(freq[,1])
freq[,2] <- as.numeric(freq[,2])

freq2D <- mat.or.vec(length(x.bin), length(y.bin))
freq2D[cbind(freq[,1], freq[,2])] <- freq[,3]

# Normal
image(x.bin, y.bin, freq2D^(1/3), col=grey.colors(200, start=1, end=0),
      main="Complaints Across Years", xlab="Complaints in Previous Year", ylab="Complaints in Next Year")
@ 
\caption{Complaints By Year}
\label{complaints-year-fig}
\end{figure}

\paragraph{Recommended visualization: Sorted Heatmap} I recommend you
show two heatmaps of the number of complaints by officer by year. The
first should be very narrow and long to demonstrate that the vast bulk
of officers have very few complaints, while a few have many and many
every year. The second heatmap should be a zoomed in view, that shows
the details for officers. On the web, these two visualizations should
be coupled so that detail view is aligned to slider of the macro view
(Figure \ref{recommended-viz-fig}). You may also want to break out the
views by unit.

\begin{figure}
  \begin{minipage}{0.40\textwidth}
<<fig.width=1.3, fig.height=5>>=
image(as.matrix(t(tail(yearly_complaints[order(rowSums(yearly_complaints)),], 500))), 
       col=grey.colors(200, start=1, end=0),
       axes=FALSE)
@ 
  \end{minipage}\hfill
  \begin{minipage}{0.40\textwidth}
<<fig.width=1.8, fig.height=5>>=
image(as.matrix(t(tail(yearly_complaints[order(rowSums(yearly_complaints)),], 20))), 
       col=grey.colors(200, start=1, end=0),
       axes=FALSE)
axis(2, at = 0:19/19, labels=paste('Officer', 20:1), tick=FALSE, las=1, cex.axis=0.7)
axis(3, at = c(0, 0.5, 1), labels=c('2012', '2014', '2015'), tick=FALSE, las=2)
@ 
\end{minipage}
\caption{Complaints By Year, Top 20 and All}
\label{recommended-viz-fig}
\end{figure}

<<dispositions>>=
all_investigators <- dbGetQuery(con,
    paste("SELECT COUNT(*) as count, recommended_finding \
           FROM accused INNER JOIN complaints \
           USING (complaint_id) \
           WHERE recommended_finding != '' \
              AND complaint IN ('", paste(external_complaints, 
                                          collapse = "', '"), "') \
           GROUP BY recommended_finding \
           ORDER BY COUNT(*) desc", sep=''))

disposition_percent <- all_investigators$count/sum(all_investigators$count) * 100
names(disposition_percent) <- all_investigators$recommended_finding 
@ 

\subsection*{Few complaints are sustained}
Only \Sexpr{signif(disposition_percent['SU'], 2)}\% of police
complaints are sustained. Most
(\Sexpr{signif(disposition_percent['NA'], 2)}\%) cases are never
investigated because the complainant will not sign an affidavit
swearing to the truth of the complaint. For
\Sexpr{signif(disposition_percent['NS'], 2)}\% of complaints, investigators fail to find evidence to either sustain the complaint
or show the officer blameless, resulting in a `Not Sustained'
disposition. In the remaining \Sexpr{signif(disposition_percent['UN'] +
  disposition_percent['EX'], 2)}\% of cases, the complaint is found to be
unfounded or the officer's actions are found to be justified (Figure~\ref{sankey-all-fig}). 

\paragraph{Recommended visualization: Sankey Diagram} I recommend you
show the different dispositions as a Sankey diagram. For added interest,
the user could select complaint category or investigator type to see
how the pattern changes.

\begin{figure}
  \centering
<<all_sankey, fig.height=3>>=
source('../R/Sankey.R')

dispositionSankey <- function(df) {
    counts <- df$count
    if (length(counts) < 5) {
        counts <- c(counts, 0)
    }

    SankeyR(sum(counts), 
            counts,
            labels=c("Complaints", "No affidavit", "Not sustained", "Unfounded", "Exonerated", "Sustained"), 
            unit="")
    }

dispositionSankey(all_investigators)
@ 
\caption{Disposition of Complaints}
\label{sankey-all-fig}
\end{figure}

\subsection*{Dispositions vary depend on who's investigating}

The outcome of a complaint depends upon who is investigating the
case. If the case is investigated by an IPRA employee, the complainant
is likely to sign an affidavit, and the complaint has a much higher
chance of being sustained (Figure~\ref{sankey-ipra-fig}). On the other
hand, if the case is being investigated by a commanding officer, few
complainants are willing to sign affidavits and the very few
complaints are sustained
(Figure~\ref{sankey-commanding-fig}). Complaints investigated by
Internal Affairs are in between (Figure~\ref{sankey-iad-fig}).

\paragraph{Recommended visualization: Bar graph} I recommend you show
the rates of `No Affidavit' and `Sustained' in a simple bar chart.

\begin{figure}
  \centering
<<ipra_sankey, fig.height=3>>=
ipra_investigators <- dbGetQuery(con,
    paste("SELECT COUNT(*) as count, recommended_finding \
           FROM accused INNER JOIN complaints \
           USING (complaint_id) \
           WHERE investigator IN (SELECT name FROM ipra_employees) \
               AND recommended_finding != '' \
               AND complaint IN ('", paste(external_complaints, 
                                           collapse = "', '"), "') \
           GROUP BY recommended_finding \
           ORDER BY COUNT(*) desc", sep=''))  

dispositionSankey(ipra_investigators)
@ 
\caption{Disposition of Complaints Investigated by IPRA}
\label{sankey-ipra-fig}
\end{figure}

\begin{figure}
  \centering
<<iad_sankey, fig.height=3>>= 
iad_investigators = c(
    'KLIMAS, ROBERT',
    'KANE, JAMIE', 
    'ANDREWS-SMITH, MARSHA', 
    'JORDAN, TYRONE', 
    'MORSE, CARLIN', 
    'HERMANN, JANINE',
    'DOWNS, RICHARD', # http://projects.suntimes.com/koschman/wp-content/uploads/2013/08/Internal-Affairs-Report-March-7-2013.pdf
    'PIONKE, JOSEPH', # http://projects.suntimes.com/koschman/wp-content/uploads/2013/08/Internal-Affairs-Report-March-7-2013.pdf
    'MARTINEZ, LINDA', 
    'STEHLIK, JOSEPH', # http://articles.chicagotribune.com/2012-10-31/news/ct-met-abbate-bar-beating-trial-1031-20121031_1_felony-karolina-obrycka-misdemeanor-charges
    'SOLIS, MARCELLA', # http://www.cityofchicago.org/content/dam/city/depts/cpb/PoliceDiscipline/14PB2863.pdf
    'ALEJO, LUIS', 
    'RICE, SEAN', # http://projects.suntimes.com/koschman/latest-news/after-10-years-cpd-wants-to-talk-to-mom/
    'MARAFFINO, JOSEPH',  #http://chicagofop.org/newsletter/2013/042013news.pdf
    'COCHRAN, TERRANCE', # https://casetext.com/case/krupa-v-naleway
    'NALEWAY, DAVID', # https://casetext.com/case/krupa-v-naleway
    'ASSAF, MAJED', # https://www.linkedin.com/pub/majed-assaf-mba-cfe/35/54/376
    'MARTINEZ, LINDA', # http://www.cityofchicago.org/content/dam/city/depts/cpb/PoliceDiscipline/14PB2852.pdf
    'BARZ, MICHAEL', # http://www.cityofchicago.org/content/dam/city/depts/cpb/PoliceDiscipline/14PB2855.pdf
    'GIUDICE, THOMAS', # http://secondcitycop.blogspot.com/2006/03/new-sergeant-assignments.html,
    'SPAGNOLA, MICHAEL', # http://secondcitycop.blogspot.com/2006/03/new-sergeant-assignments.html,
    'PLOTKE, RICHARD', # http://articles.chicagotribune.com/2011-08-25/news/ct-met-eavesdropping-trial-0825-20110825_1_eavesdropping-law-police-officers-law-enforcement
    'MATTHEWS, ROMAN', # http://chicagofop.org/newsletter/2012/062012news.pdf
    'WHITE, EVELYN', # http://chicagofop.org/newsletter/2012/062012news.pdf
    'WOODS, DAVID')

police_agents <- dbGetQuery(con,
    paste("SELECT COUNT(*) as count, recommended_finding \
           FROM accused INNER JOIN complaints \
           USING (complaint_id) \
           WHERE (investigator IN (SELECT name \
                                  FROM police_employees \
                                  WHERE position = 'POLICE AGENT') \
               OR investigator IN (SELECT officer_name \
                                   FROM officers \
                                   WHERE current_unit = '121') \
               OR investigator IN ('", 
          paste(iad_investigators, collapse = "', '"), "')) \
               AND recommended_finding != '' \
               AND complaint IN ('", paste(external_complaints, 
                                           collapse = "', '"), "') \
           GROUP BY recommended_finding \
           ORDER BY COUNT(*) desc", sep=''))  

dispositionSankey(police_agents)
@ 
\caption{Disposition of Complaints Investigated by IAD}
\label{sankey-iad-fig}
\end{figure}

\begin{figure}
\centering
<<commanding_officers_sankey, fig.height=3>>=
commanding_officers <- dbGetQuery(con,
    paste("SELECT COUNT(*) as count, recommended_finding \
           FROM accused INNER JOIN complaints \
           USING (complaint_id) \
           WHERE (investigator NOT IN (SELECT name \
                                  FROM police_employees \
                                  WHERE position = 'POLICE AGENT') \
               AND investigator NOT IN (SELECT officer_name \
                                   FROM officers \
                                   WHERE current_unit = '121') \
               AND investigator NOT IN (SELECT name FROM ipra_employees) \
               AND investigator NOT IN ('", 
          paste(iad_investigators, collapse = "', '"), "')) \
               AND recommended_finding != '' \
               AND complaint IN ('", paste(external_complaints, 
                                           collapse = "', '"), "') \
           GROUP BY recommended_finding \
           ORDER BY COUNT(*) desc", sep=''))  

dispositionSankey(commanding_officers)
@ 
\caption{Disposition of Complaints Investigated by Commanding Officers}
\label{sankey-commanding-fig}
\end{figure}

<<punishments>>=
lessThanFive <- function(df) {
    suspension_lookup = c(
    '000'=0, 
    '100'=0, 
    '200'=Inf, 
    '300'=Inf, 
    '600'=0, 
    '800'=Inf, 
    '900'=Inf)
    
    discipline <- df[,1]
    
    suspension_length <- ifelse(substr(discipline, 1, 1) == '0',
                                as.numeric(as.character(discipline)),
                                suspension_lookup[as.character(discipline)])
    
    return(sum(na.omit(suspension_length <= 5))/length(suspension_length))
}

excessive_force_lt5 <- lessThanFive(dbGetQuery(con,
                              "SELECT final_discipline \
                               FROM accused \
                               WHERE complaint LIKE '05%' \
                               AND recommended_finding = 'SU'"))
illegal_search_lt5 <- lessThanFive(dbGetQuery(con,
                              "SELECT final_discipline \
                               FROM accused \
                               WHERE complaint LIKE '04%' \
                               AND recommended_finding = 'SU'"))
first_amendment_lt5 <- lessThanFive(dbGetQuery(con,
                              "SELECT final_discipline \
                               FROM accused \
                               WHERE complaint LIKE '03%' \
                               AND recommended_finding = 'SU'"))
@ 

\subsection*{Punishments are meager}
In the rare event that a complaint is sustained, most punishments are
meager. For sustained excessive force complaints,
\Sexpr{signif(excessive_force_lt5 * 100, 2)}\% resulted in a
suspension for five days or less; the figures are
\Sexpr{signif(illegal_search_lt5 * 100, 2)}\% for illegal search
complaints and \Sexpr{signif(first_amendment_lt5 * 100, 2)}\% for
first amendment violations.

\paragraph{Recommended visualization: Bar graph} Choose a threshold
for a `meager' punishment, like 5 days or less, and show the
percentages of punishments that are meager for each complaint
type. Showing the distribution of punishments within each complaint is
confusing, better to just show this one number.

I would not show the data for `administrative' complaints.

\paragraph{Vignette} There were \Sexpr{dbGetQuery(con, "SELECT
  count(*) FROM accused WHERE complaint = '01B'")} complaints of
verbal abuse with a bias (racial or otherwise). Only one of these
complaints was sustained. The punishment was a one day suspension.

\section*{Future Directions}
With the data that the Invisible Institute currently has, I think
these are the points that you can make and make compelling. 

With additional data, you may be able to show that 

\begin{enumerate}
  \item CPD could identify problem officers early
  \item Lives and millions of dollars of public money are lost because
    of absence of accountability
\end{enumerate}

\subsection*{Are problem officer identifiable?}
Here you can take two approaches one retroactive and one
prospective. First, you could identify all officers within a relevant
timespan who have been convicted of pertinent criminal offense. We
could then build a predictive model using the complaint data that
distinguishes these officers other officers.

Second, we can identify outlying officers in complaint data now and
investigate them. If Invisible Institute finds criminal behavior, that
would be very strong evidence indeed. 

<<load, include=FALSE>>=
yearly_complaints_for_analysis$unit <- as.factor(yearly_complaints_for_analysis$unit)
yearly_complaints_for_analysis$officer_id<- as.factor(yearly_complaints_for_analysis$officer_id)

model <- lme4::glmer(complaints ~ (I(year-2013) + 
                                   (1 + I(year-2013) | unit) +
                                   (1 | officer_id)
                                   ), 
                     data = yearly_complaints_for_analysis,
                     family = "poisson")

@ 

These are the top ten outlying police officers controlling for unit.\footnote{The model is mixed
  effects Poisson regression model:
  
\begin{align*}
\log{\operatorname{E}(y_{ijt})} &= \pi_{0ij} + \pi_{1ij} \cdot \text{Year}_t \\
\pi_{0ij} &= \beta_{0i} + u_{00j} \\
\pi_{1ij} &= \beta_{1i} + u_{10j} \\
\beta_{0i} &= \gamma_{0} + u_{0i} \\
\beta_{1i} &= \gamma_{1} + u_{1i} \\
\end{align*}
}

<<top_officers, results='asis'>>=
officers <- ranef(model)$officer_id

top_officer_ids <- row.names(officers)[order(-officers[,1])][1:10]

top_officers <- dbGetQuery(con,
                           paste("SELECT officer_id, officer_name, star, \
                                         date_of_appointment, race, \
                                         current_unit, \
                                         count(accused.*) as count \
                                  FROM officers INNER JOIN accused \
                                  USING (officer_id) \
                                  WHERE officer_id IN (",
                                 paste(top_officer_ids, collapse=','),
                                 ") \
                                  GROUP BY officer_id, officer_name, star, \
                                         date_of_appointment, race, \
                                         current_unit",
                                 sep=''))

top_officers <- top_officers[match(as.integer(as.character(top_officer_ids)), top_officers$officer_id),]

top_officers$date_of_appointment <- as.character(top_officers$date_of_appointment)
top_officers$count <- as.integer(top_officers$count)

tab <- xtable::xtable(top_officers[,c(2:4, 6:7)])
names(tab) <- c("Officer", "Star", "Date of Appointment", "Unit",
                "Complaints")

print(tab, row.names=FALSE, include.rownames=FALSE)
@ 

\subsection*{Cost of Impunity}
If it is possible to detect problem officers early and we also had
data on the lives ended or harmed by police and the settlements paid
out by the City, we could calculate the costs of impunity. For this we
would need details on criminal convictions and civil settlements.  

<<data_problems>>=
total_complaints <- dbGetQuery(con,
                               "SELECT COUNT(*) FROM complaints")

no_allegations <- dbGetQuery(con,
                             "SELECT COUNT(*) \
                              FROM complaints LEFT JOIN accused \
                              USING (complaint_id) \
                              WHERE accused.complaint_id IS NULL")

total_allegations <- dbGetQuery(con,
                                "SELECT COUNT(*) FROM accused")
missing_complaint_code <- dbGetQuery(con,
                                     "SELECT COUNT(*) FROM accused \
                                      WHERE complaint = ''")


@ 

\section*{Data Problems}
There are two very serious potential data problems in recent complaint
report data. First, there are \Sexpr{no_allegations} complaints that do
not have any data on the alleged offense: no information about the
officer, the complaint, the time, nothing. This is about
\Sexpr{signif(100 * no_allegations/total_complaints, 2)}\% of the complaints.

This is such a large fraction that it makes it impossible to have
confidence in any conclusions drawn from the data. We must understand
the reasons for this missingness.

Less serious, there are \Sexpr{missing_complaint_code} allegations that do
not have a complaint code. This is about \Sexpr{signif(100 *
  missing_complaint_code/total_allegations, 2)}\%. Why might these be missing?


\end{document}

